// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Aluno {
    id                  String    @id @default(uuid())
    name                String
    email               String    @unique
    password            String
    recoveryPass        String?
    alunoImagem         String?
    turmas              String? // Formato "id1,id2,id3"
    dataNascimento      DateTime?
    disciplina          String?
    rm                  String?
    tentativasRestantes Int       @default(5)
    createdAt           DateTime  @default(now())
    updatedAt           DateTime  @updatedAt

    @@map("alunos")
}

model PreAluno {
    id                  String   @id @default(uuid())
    name                String
    email               String   @unique
    password            String
    token               String
    tentativasRestantes Int      @default(5)
    createdAt           DateTime @default(now())
    updatedAt           DateTime @updatedAt

    @@map("pre_alunos")
}

model Admin {
    id          String   @id @default(uuid())
    name        String
    email       String   @unique
    password    String
    adminImagem String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@map("admins")
}

model Curso {
    id            String      @id @default(uuid())
    name          String
    turno         Turno
    duracao       String
    coordenador   Coordenador @relation(fields: [coordenadorId], references: [id])
    coordenadorId String
    turma         Turma[]
    vaga          Vaga[]
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt

    @@map("cursos")
}

enum Turno {
    MANHA
    TARDE
    NOITE
    INTEGRAL
}

model Turma {
    id        String   @id @default(uuid())
    inicio    String // Formato "AAAA-MM-DD"
    fim       String // Formato "AAAA-MM-DD"
    curso     Curso    @relation(fields: [cursoId], references: [id])
    cursoId   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("turmas")
}

model Empresa {
    id            String   @id @default(uuid())
    name          String
    email         String   @unique
    password      String
    empresaImagem String?
    cnpj          String
    endereco      String?
    telefone      String?
    token         String?
    patrocinador  Boolean  @default(false)
    vaga          Vaga[]
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    @@map("empresas")
}

model Vaga {
    id            String      @id @default(uuid())
    Curso         Curso       @relation(fields: [cursoId], references: [id])
    cursoId       String
    Empresa       Empresa     @relation(fields: [empresaId], references: [id])
    empresaId     String
    requisitos    String
    beneficios    String
    remuneracao   String
    cargaHoraria  String
    dataInicio    String
    dataFim       String
    status        String
    funcionario   Funcionario @relation(fields: [cadastradorId], references: [id])
    cadastradorId String
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt

    @@map("vagas")
}

model Professor {
    id                  String        @id @default(uuid())
    name                String
    email               String        @unique
    password            String
    recoveryPass        String?
    tituloPrincipal     String
    professorImagem     String?
    validated           Boolean       @default(false)
    coordenador         Coordenador[]
    atide               Atividade[]
    tentativasRestantes Int           @default(5)
    createdAt           DateTime      @default(now())
    updatedAt           DateTime      @updatedAt

    @@map("professores")
}

model Coordenador {
    id          String    @id @default(uuid())
    name        String
    professor   Professor @relation(fields: [professorId], references: [id])
    professorId String
    curso       Curso[]
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    @@map("coordenadores")
}

model Funcionario {
    id                  String   @id @default(uuid())
    name                String
    email               String   @unique
    password            String
    recoveryPass        String?
    funcionarioImagem   String?
    cargo               Cargo
    vaga                Vaga[]
    validated           Boolean  @default(false)
    tentativasRestantes Int      @default(5)
    createdAt           DateTime @default(now())
    updatedAt           DateTime @updatedAt

    @@map("funcionarios")
}

enum Cargo {
    GESTAO
    ADMINISTRACAO
    DIRECAO
    ORIENTACAO
}

model Atividade {
    id              String    @id @default(uuid())
    title           String
    descricao       String    @db.VarChar(1000)
    professor       Professor @relation(fields: [professorId], references: [id])
    professorId     String
    atividadeImagem String?
    createdAt       DateTime  @default(now())
    updatedAt       DateTime  @updatedAt

    @@map("atividades")
}
