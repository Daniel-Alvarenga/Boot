// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Aluno {
    id             String   @id @default(uuid())
    name           String
    email          String   @unique
    password       String
    recoveryPass   String?
    turmas         String? // Formato "id1,id2,id3"
    dataNascimento String? // Formato "AAAA-MM-DD"
    disciplina     String?
    rm             String?
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

    @@map("alunos")
}

model Admin {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("admins")
}

model Curso {
    id        String   @id @default(uuid())
    name      String
    periodo   String
    turno     Turno
    duracao   String
    turma     Turma[]
    vaga      Vaga[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("cursos")
}

enum Turno {
    MANHA
    TARDE
    NOITE
    INTEGRAL
}

model Turma {
    id        String   @id @default(uuid())
    inicio    String // Formato "AAAA-MM-DD"
    fim       String // Formato "AAAA-MM-DD"
    curso     Curso    @relation(fields: [cursoId], references: [id])
    cursoId   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("turmas")
}

model Empresa {
    id           String   @id @default(uuid())
    name         String
    email        String   @unique
    password     String
    cnpj         String
    endereco     String
    telefone     String
    patrocinador Boolean
    vaga         Vaga[]
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    @@map("empresas")
}

model Vaga {
    id           String   @id @default(uuid())
    Curso        Curso    @relation(fields: [cursoId], references: [id])
    cursoId      String
    Empresa      Empresa  @relation(fields: [empresaId], references: [id])
    empresaId    String
    requisitos   String
    beneficios   String
    remuneracao  String
    cargaHoraria String
    dataInicio   String
    dataFim      String
    status       String
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    @@map("vagas")
}

model PreAluno {
    id                  String   @id @default(uuid())
    name                String
    email               String   @unique
    password            String
    token               String
    tentativasRestantes Int      @default(5)
    createdAt           DateTime @default(now())
    updatedAt           DateTime @updatedAt

    @@map("pre_alunos")
}
